use nix
clear_direnv_aliases

d () {
  pwndbg
}
export_function d

41 () {
  if [ "$#" -ne 2 ]; then
    echo "Illegal number of parameters, expected 2: freq filename"
    exit 2
  fi
  gcc downsample.c
  FREQ=$((44100/$1))
  sox $2 -t raw -b 16 -c 1 -e s -r 44100 - | ./a.out $1 | play -t raw -b 16 -c 1 -e s -r $FREQ -
}
export_function 41

43 () {
  gcc sin.c -lm
  ./a.out 10000 3528 88200 > sin.raw

  gcc read_data2.c
  ./a.out sin.raw | head -n 100 > a.dat
  gnuplot -p -e 'set xlabel "{/=20 {/Arial-Italic sample}}"; set ylabel "{/=20 {/Arial-Italic sin t}}"; set terminal png; set output "../tex/I1/43.png";  plot "a.dat" with linespoints, "a.dat" every 10 with linespoints'
  rm sin.raw a.dat
}
export_function 43

44 () {
  if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters, expected 1: filename"
    exit 2
  fi
  play $1
  gcc fft.c -lm
  sox $1 -t raw -c 1 - | ./a.out 8192 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 44

45 () {
  if [ "$#" -ne 3 ]; then
    echo "Illegal number of parameters, expected 3: filename min_f max_f"
    exit 2
  fi
  gcc bandpass.c -lm
  sox $1 -t raw -c 1 - | ./a.out 8192 $2 $3 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 45

510s () {
  rec -t raw - | nc -l 50000
}
export_function 510s

510c () {
  nc localhost 50000 | play -t raw rate 48000 -b 16 -c 2 -
}
export_function 510c

54() {
  #nc -l 50000 > request
  sed -i -e '/Host/c Host: www.ee.t.u-tokyo.ac.jp' request
  nc -q -1 www.ee.t.u-tokyo.ac.jp 80 < request > response
}
export_function 54

511s () {
  iperf -s
}
export_function 511s

511ncc () {
  nc 157.82.202.94 30000 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 511ncc

511iperfc () {
  iperf -c 157.82.202.94
}
export_function 511iperfc

61 () {
  if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters, expected 1: filename"
    exit 2
  fi
  gcc client_recv.c

  (cat $1 | nc -l 50000) &
  s_pid=$!

  (./a.out 127.0.0.1 50000 > check) &
  c_pid=$!

  sleep 1
  kill $c_pid
  kill $s_pid
  checkmd=`md5sum check | awk '{print $1;}'`
  filemd=`md5sum $1 | awk '{print $1;}'`
  rm check

  if [ $checkmd != $filemd ]; then
    echo "md5sum not identical"
    echo "sent data is"
    echo $checkmd
    echo "original file is"
    echo $filemd
    exit 2
  else
    echo "md5sum identical!"
  fi
}
export_function 61

  ## プロセスIDの配列
  #pids=()
  ## 直前のpidを格納
  #pids[$!]=$!
  ## 終了待ち
  #wait ${pids[@]}

62 () {
  if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters, expected 1: filename"
    exit 2
  fi
  gcc client_recv_udp.c

  ## プロセスIDの配列
  #pids=()
  ## 直前のpidを格納
  #pids[$!]=$!
  ## 終了待ち
  #wait ${pids[@]}

  (cat $1 | nc -ul 50000) &
  s_pid=$!

  (./a.out 127.0.0.1 50000 > check) &
  c_pid=$!

  sleep 1
  kill $s_pid
  checkmd=`md5sum check | awk '{print $1;}'`
  filemd=`md5sum $1 | awk '{print $1;}'`
  rm check

  if [ $checkmd != $filemd ]; then
    echo "md5sum not identical"
    echo "sent data is"
    echo $checkmd
    echo "original file is"
    echo $filemd
    exit 2
  else
    echo "md5sum identical!"
  fi
}
export_function 62

81s () {
  gcc serv_send.c
  rec -t raw -b 16 -c 1 -e s -r 44100 - | ./a.out 50000
}
export_function 81s

81c () {
  gcc client_recv.c
  ./a.out 127.0.0.1 50000 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 81c

82s () {
  if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters, expected 1: port"
    exit 2
  fi
  gcc serv_send2.c
  rec -t raw -b 16 -c 1 -e s -r 44100 - | ./a.out $1
}
export_function 82s

82c () {
  if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters, expected 1: port"
    exit 2
  fi
  gcc client_recv.c
  ./a.out 127.0.0.1 $1 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 82c

83s () {
  if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters, expected 1: port"
    exit 2
  fi
  gcc i1i2i3_phone.c
  rec -t raw -b 16 -c 1 -e s -r 44100 - | ./a.out $1 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 83s

83c () {
  if [ "$#" -ne 2 ]; then
    echo "Illegal number of parameters, expected 2: ip_address port"
    exit 2
  fi
  gcc i1i2i3_phone.c
  rec -t raw -b 16 -c 1 -e s -r 44100 - | ./a.out $1 $2 | play -t raw -b 16 -c 1 -e s -r 44100 -
}
export_function 83c

copy1 () {
  DIST="../tex/I1/"
  cp -f problems/00/p00.c $DIST
  cp -f problems/01/p01.c $DIST
  cp -f problems/02/p02.c $DIST
  cp -f problems/03/p03.c $DIST
  cp -f problems/04/p04.c $DIST
  cp -f problems/05/p05.c $DIST
  cp -f problems/06/p06.c $DIST
  cp -f problems/07/p07.c $DIST
  cp -f problems/08/p08.c $DIST
  cp -f bandpass.c $DIST
  cp -f doremi.c $DIST
  cp -f downsample.c $DIST
  cp -f fft.c $DIST
  cp -f read_data.c $DIST
  cp -f read_data2.c $DIST
  cp -f sin.c $DIST
}
export_function copy1

copy2 () {
  DIST="../tex/I2/"
  cp -f client_recv.c $DIST
  cp -f client_recv_udp.c $DIST
  cp -f serv_send.c $DIST
  cp -f serv_send2.c $DIST
  cp -f i1i2i3_phone.c $DIST
}
export_function copy2
